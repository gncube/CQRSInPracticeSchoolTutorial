// <auto-generated />
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(SchoolDbContext))]
    [Migration("20231009101251_AddedSeedingData")]
    partial class AddedSeedingData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("Domain.Course", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CourseID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Course", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Introduction to Computer Science"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Data Structures and Algorithms"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Operating Systems"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Web Development"
                        },
                        new
                        {
                            Id = 5L,
                            Name = "Machine Learning"
                        });
                });

            modelBuilder.Entity("Domain.Enrollment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("EnrollmentID");

                    b.Property<long>("CourseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Grade")
                        .HasColumnType("INTEGER");

                    b.Property<long>("StudentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Enrollment", (string)null);
                });

            modelBuilder.Entity("Domain.EnrollmentData", b =>
                {
                    b.Property<string>("Course")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Grade")
                        .HasColumnType("INTEGER");

                    b.Property<long>("StudentId")
                        .HasColumnType("INTEGER");

                    b.ToTable("EnrollmentData");
                });

            modelBuilder.Entity("Domain.Sports", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("SportsID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Sports", (string)null);
                });

            modelBuilder.Entity("Domain.SportsEnrollment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("SportsEnrollmentID");

                    b.Property<int>("Grade")
                        .HasColumnType("INTEGER");

                    b.Property<long>("SportsId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("StudentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("SportsEnrollment", (string)null);
                });

            modelBuilder.Entity("Domain.Student", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("StudentID");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Student", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Email = "john.doe@email.com",
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = 2L,
                            Email = "jane.smith@email.com",
                            Name = "Jane Smith"
                        },
                        new
                        {
                            Id = 3L,
                            Email = "emily.jones@email.com",
                            Name = "Emily Jones"
                        });
                });

            modelBuilder.Entity("Domain.Enrollment", b =>
                {
                    b.HasOne("Domain.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Domain.SportsEnrollment", b =>
                {
                    b.HasOne("Domain.Student", "Student")
                        .WithMany("SportsEnrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Domain.Student", b =>
                {
                    b.Navigation("Enrollments");

                    b.Navigation("SportsEnrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
